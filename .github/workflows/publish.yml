name: Publish to pub.dev

# Trigger the workflow when a new tag is pushed
on:
  push:
    tags:
      - 'v*' # Trigger on version tags like v1.0.0
  # Allow manual triggering
  workflow_dispatch:

jobs:
  # Job to validate the package before publishing
  validate:
    name: Validate Package
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Flutter environment
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'
          cache: true

      # Get dependencies
      - name: Get dependencies
        run: flutter pub get

      # Run all tests to ensure everything is working
      - name: Run tests
        run: flutter test

      # Analyze code for any issues
      - name: Analyze code
        run: flutter analyze

      # Check code formatting
      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .

      # Dry run publish to validate package
      - name: Validate package
        run: dart pub publish --dry-run

  # Job to publish the package to pub.dev
  publish:
    name: Publish to pub.dev
    runs-on: ubuntu-latest
    needs: validate # Only run after validation passes

    steps:
      # Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Flutter environment
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.0'
          channel: 'stable'
          cache: true

      # Get dependencies
      - name: Get dependencies
        run: flutter pub get

      # Setup pub.dev credentials
      - name: Setup pub credentials
        run: |
          mkdir -p ~/.config/dart
          echo '${{ secrets.PUB_DEV_CREDENTIALS }}' | base64 -d > ~/.config/dart/pub-credentials.json

      # Publish to pub.dev
      - name: Publish package
        run: dart pub publish --force

      # Create GitHub release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## Changes

            See [CHANGELOG.md](CHANGELOG.md) for detailed changes.

            ## Installation

            Add this to your package's `pubspec.yaml` file:

            ```yaml
            dependencies:
              flutter_declarative_syntax: ^${{ github.ref_name }}
            ```
          draft: false
          prerelease: false
